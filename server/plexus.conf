# Plexus config file
#
# $Id: plexus.conf,v 2.31 1994/12/07 23:50:41 sanders Exp $
#
# Tony Sanders <sanders@earth.com>, April 1993
#

$plexus_configured = 1;				# make sure we configured ok
# other $plexus_ variables are set in parent from cmdline options

$http_user              = 'www';                # user id to run as (for root)
$http_group             = 'www';                # group id to run as (for root)
						# can be list: 'www,alt,staff'

# NOTE: You're on your own if you use the chroot feature.  It obviously
# requires the chroot()'ed area to be setup to run the server, so you
# must have things like the server source, perl, the perl include files,
# and a number of other system dependent programs in there.  If you use
# this feature, please write up what you do and I'll be happy to include
# it as a README.chroot in a future release.
$http_chroot            = 0;                    # chroot() server?

chop($hostname          = `hostname`);          # Fully Qualified Domain Name

#
# Basic configuration options
#
$server_version         = 'plexus/3.0o';	# server version
$http_service           = 'http';               # the service in /etc/services
$http_proto             = 'tcp';                # type of protocol
$http_defaultproto      = 6;                    # fallback protocol number
$http_defaultport       = 80;                   # fallback service number
$http_userport          = 8001;                 # default non-root port id
$http_inaddr		= "\0\0\0\0";		# dflt bind() addr: INADDR_ANY
$http_sdir		= $plexus_src;		# historical
unshift(@INC, $http_sdir);
$http_server            = "$http_sdir/plexus";
$http_localcfg		= "local.conf";

# Internal codes
$http_version = 'HTTP/1.0';
$htrq_version = 'HTTP/1.0';

#
# These define the mapping between HTTP Method and perl function.
#
$method{'get'} = "do_get";
$method{'head'} = "do_head";
$method{'post'} = "do_post";
# $method{'put'} = "do_put";
# $method{'showmethod'} = "do_showmethod";

# TEXTSEARCH and SPACEJUMP are magic methods that are returned for objects
# to specify that they are indexes (spatial in the case of SPACEJUMP)
# Support for these are not in Plexus 3.0 but I expect the in the future
# I will support them (probably in the process of writing Plexus 4.0).

#
# Configuration options for the various gateways
#
# You must configure these by hand:
#     bsdi-man.pl neuro.pl npindex.pl siks.pl sunman.pl sunmanindex.pl

# bookmark.pl
$bookmark'bookmark{'root'} = "$http_sdir/bookmark";
$bookmark'bookmark{'width'} = 48;		# but then it's hard to debug
$bookmark'bookmark{'height'} = 48;
$bookmark'bookmark{'regions'} = 'flag:back';

# calendar.pl
$calendar'cmd = '/usr/bin/cal';

# date.pl
$date'tzdir = '/usr/share/zoneinfo';
$date'cmd = '/bin/date';

# dir.pl
$dir_header = ".header.html";			# header file for dir index
$dir_footer = ".footer.html";			# footer file for dir index

# fortune.pl
$fortune'cmd = "/usr/games/fortune";
$fortune'opts = "aelos";			# valid options

#
# Format translations (NIY):
#      from                        to:how
#
# $trans{'image/gif'}              = "image/portable-pixmap:gif'ppm";
# $trans{'image/portable-pixmap'}  = "image/gif:ppm'gif";
# $trans{'image/portable-pixmap'}  = "image/portable-graymap:ppm'pgm";
# $trans{'image/portable-graymap'} = "image/portable-pixmap:pgm'ppm";
# $trans{'image/portable-graymap'} = "image/portable-bitmap:pgm'pbm";
# $trans{'image/portable-anymap'}  = "image/x-tiff:pnm'tiff";
# $trans{'image/portable-bitmap'}  = 'image/xbm:pbm'xbm";
# $trans{'image/x-tiff'}           = "image/portable-anymap:tiff'pnm";
# $trans{'application/tex'}        = "application/dvi:tex'dvi";
# $trans{'application/troff'}      = "application/postscript:troff'ps";

# Sucessful
#$code{'ok'}              = '200 Document follows';
$code{'ok'}               = '200 OK';
$code{'created'}          = '201 URI follows';

$code{'moved'}            = '301 Permanent Relocation URI follows';
$code{'found'}            = '302 Temporary Relocation URI follows';
$code{'method'}           = '303 Temporary Relocation method and URI follows';
$code{'not_modified'}     = '304 Not Modified';

# Client request errors;
$code{'bad_request'}      = '400 Bad Request';
$code{'unauthorized'}     = '401 Unauthorized';
$code{'payment_required'} = '402 Payment Required';
$code{'forbidden'}        = '403 Forbidden';
$code{'not_found'}        = '404 Not Found';

# Server errors
$code{'internal_error'}   = '500 Internal Error';
$code{'not_implemented'}  = '501 Not Implemented';
$code{'timed_out'}        = '502 Timed Out';

1;
